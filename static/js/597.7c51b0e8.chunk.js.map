{"version":3,"file":"static/js/597.7c51b0e8.chunk.js","mappings":"4RAGaA,GAAYC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,qLAUTE,EAAOF,EAAAA,EAAAA,EAAH,mIAQJG,GAAQH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,yIAOLK,EAAaL,EAAAA,EAAAA,MAAH,yFAMVM,EAAcN,EAAAA,EAAAA,OAAH,4PAYXO,EAAmBP,EAAAA,EAAAA,EAAH,+F,SCtCd,SAASQ,IACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,YAAgBC,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,QACrBC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,aAOvBC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,QAAQC,WAC5BC,SAAUJ,EAAAA,KAAaK,IAAI,GAAGF,aAQ1BG,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnB,OAAO,SAAC,KAAD,CAAcA,KAAMA,EAAMC,OAAQ,SAAAC,GAAO,OAAI,SAACnB,EAAD,UAAmBmB,QAGzE,OACE,iCACA,SAACxB,EAAD,mCACGS,GAAagB,EAAAA,GAAAA,QAAA,wBAA+Bd,EAA/B,QAA+C,SAAC,KAAD,IAC5DD,GACCe,EAAAA,GAAAA,MAAY,0DACV,SAAC,KAAD,KAEJ,SAAC,KAAD,CACEC,cA5BuB,CAC3BT,MAAO,GACPE,SAAU,IA2BNQ,SAnBe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BrB,EAAMoB,GACNC,KAkBIC,iBAAkBhB,EAHpB,UAKE,UAACjB,EAAD,CAAWkC,aAAa,MAAxB,WACE,SAAC5B,EAAD,CAAY6B,QAAQ,QAApB,oBACA,SAAC/B,EAAD,CAAOqB,KAAK,QAAQW,KAAK,QAAQC,YAAY,iBAC7C,SAACb,EAAD,CAAWC,KAAK,WAChB,SAACnB,EAAD,CAAY6B,QAAQ,WAApB,uBACA,SAAC/B,EAAD,CAAOqB,KAAK,WAAWW,KAAK,WAAWC,YAAY,oBACnD,SAACb,EAAD,CAAWC,KAAK,cAChB,SAAClB,EAAD,CAAa6B,KAAK,SAAlB","sources":["page/LoginPage/LoginPage.Styled.jsx","page/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const LoginForm = styled(Form)`\n  margin: 0 auto 15px;\n  padding: 15px;\n  border: 1px solid #565b9f;\n  border-radius: 4px;\n  display: flex;\n  flex-direction: column;\n  width: 320px;\n`;\n\nexport const Text = styled.p`\n  font-size: 34px;\n  margin-top: 100px;\n  margin-bottom: 40px;\n  font-weight: 700;\n  color:  #565b9f;\n`;\n\nexport const Input = styled(Field)`\n  height: 25px;\n  margin-bottom: 4px;\n  padding: 4px;\n  font:  1.2em 'Fira Sans', serif;\n  font-size: 14px;\n`;\nexport const LoginLable = styled.label`\n  text-align: start;\n  margin-bottom: 4px;\n  color:  #565b9f;\n`;\n\nexport const LoginButton = styled.button`\n  margin: 10px auto ;\n  font:  1.2em 'Fira Sans', serif;\n  height: 40px;\n  width: 200px;\n  border: 0px solid #565b9f;\n  border-radius: 4px;\n  color: #565b9f;\n  box-shadow: 0 4px 4px rgb(0 0 0 / 15%);\n  cursor: pointer;\n`;\n\nexport const ErrorMessageText = styled.p`\n  margin: 2px;\n  text-align: end;\n  color: red;\n  font-size: 15px;\n`;","import { Formik, ErrorMessage } from 'formik';\nimport toast, { Toaster } from 'react-hot-toast';\nimport * as yup from 'yup';\nimport { useLoginMutation } from 'redux/authOperation';\nimport { authSelectors } from 'redux/selectors';\nimport { useSelector } from 'react-redux';\nimport { LoginForm, Text, Input, LoginLable, LoginButton, ErrorMessageText } from './LoginPage.Styled';\n\nexport default function LoginPage() {\n  const [login, { isSuccess, isError }] = useLoginMutation();\n  const userName = useSelector(authSelectors.getUserName);\n\n  const defaultInitialValues = {\n    email: '',\n    password: '',\n  };\n\n  const schema = yup.object().shape({\n    email: yup.string().email().required(),\n    password: yup.string().min(8).required(),\n  });\n\n  const handleSubmit = (values, { resetForm }) => {\n    login(values);\n    resetForm();\n  };\n\n  const FormError = ({ name }) => {\n    return <ErrorMessage name={name} render={message => <ErrorMessageText>{message}</ErrorMessageText>} />;\n  };\n\n  return (\n    <>\n    <Text>Log in to Phonebook!</Text>\n      {isSuccess && toast.success(`Welcome back, ${userName}!`) && <Toaster />}\n      {isError &&\n        toast.error('Oops...Check entered email or password and try again') && (\n          <Toaster />\n        )}\n      <Formik\n        initialValues={defaultInitialValues}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <LoginForm autoComplete=\"off\">\n          <LoginLable htmlFor=\"email\">Email</LoginLable>\n          <Input name=\"email\" type=\"email\" placeholder=\"Enter email\" />\n          <FormError name=\"email\" />\n          <LoginLable htmlFor=\"password\">Password</LoginLable>\n          <Input name=\"password\" type=\"password\" placeholder=\"Enter password\" />\n          <FormError name=\"password\" />\n          <LoginButton type=\"submit\"> Log in</LoginButton>\n        </LoginForm>\n      </Formik>\n    </>\n  );\n}"],"names":["LoginForm","styled","Form","Text","Input","Field","LoginLable","LoginButton","ErrorMessageText","LoginPage","useLoginMutation","login","isSuccess","isError","userName","useSelector","authSelectors","schema","yup","shape","email","required","password","min","FormError","name","render","message","toast","initialValues","onSubmit","values","resetForm","validationSchema","autoComplete","htmlFor","type","placeholder"],"sourceRoot":""}